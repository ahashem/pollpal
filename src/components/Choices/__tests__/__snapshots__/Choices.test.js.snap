// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Choices /> Component should render children and match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Choices
    choices={
      Array [
        Object {
          "choice": "Swift",
          "url": "/questions/1/choices/1",
          "votes": 2048,
        },
        Object {
          "choice": "Python",
          "url": "/questions/1/choices/2",
          "votes": 1024,
        },
        Object {
          "choice": "Objective-C",
          "url": "/questions/1/choices/3",
          "votes": 512,
        },
        Object {
          "choice": "Ruby",
          "url": "/questions/1/choices/4",
          "votes": 256,
        },
      ]
    }
    loading={false}
    onChange={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "buttonStyle": "outline",
      "children": <List
        bordered={false}
        dataSource={
          Array [
            Object {
              "choice": "Swift",
              "url": "/questions/1/choices/1",
              "votes": 2048,
            },
            Object {
              "choice": "Python",
              "url": "/questions/1/choices/2",
              "votes": 1024,
            },
            Object {
              "choice": "Objective-C",
              "url": "/questions/1/choices/3",
              "votes": 512,
            },
            Object {
              "choice": "Ruby",
              "url": "/questions/1/choices/4",
              "votes": 256,
            },
          ]
        }
        itemLayout="horizontal"
        loading={false}
        pagination={false}
        prefixCls="ant-list"
        renderItem={[Function]}
        split={true}
      />,
      "disabled": false,
      "onChange": [MockFunction],
      "prefixCls": "ant-radio",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bordered": false,
        "dataSource": Array [
          Object {
            "choice": "Swift",
            "url": "/questions/1/choices/1",
            "votes": 2048,
          },
          Object {
            "choice": "Python",
            "url": "/questions/1/choices/2",
            "votes": 1024,
          },
          Object {
            "choice": "Objective-C",
            "url": "/questions/1/choices/3",
            "votes": 512,
          },
          Object {
            "choice": "Ruby",
            "url": "/questions/1/choices/4",
            "votes": 256,
          },
        ],
        "itemLayout": "horizontal",
        "loading": false,
        "pagination": false,
        "prefixCls": "ant-list",
        "renderItem": [Function],
        "split": true,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "buttonStyle": "outline",
        "children": <List
          bordered={false}
          dataSource={
            Array [
              Object {
                "choice": "Swift",
                "url": "/questions/1/choices/1",
                "votes": 2048,
              },
              Object {
                "choice": "Python",
                "url": "/questions/1/choices/2",
                "votes": 1024,
              },
              Object {
                "choice": "Objective-C",
                "url": "/questions/1/choices/3",
                "votes": 512,
              },
              Object {
                "choice": "Ruby",
                "url": "/questions/1/choices/4",
                "votes": 256,
              },
            ]
          }
          itemLayout="horizontal"
          loading={false}
          pagination={false}
          prefixCls="ant-list"
          renderItem={[Function]}
          split={true}
        />,
        "disabled": false,
        "onChange": [MockFunction],
        "prefixCls": "ant-radio",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bordered": false,
          "dataSource": Array [
            Object {
              "choice": "Swift",
              "url": "/questions/1/choices/1",
              "votes": 2048,
            },
            Object {
              "choice": "Python",
              "url": "/questions/1/choices/2",
              "votes": 1024,
            },
            Object {
              "choice": "Objective-C",
              "url": "/questions/1/choices/3",
              "votes": 512,
            },
            Object {
              "choice": "Ruby",
              "url": "/questions/1/choices/4",
              "votes": 256,
            },
          ],
          "itemLayout": "horizontal",
          "loading": false,
          "pagination": false,
          "prefixCls": "ant-list",
          "renderItem": [Function],
          "split": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
