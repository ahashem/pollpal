// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AppSidebar /> component should render with children 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppSidebar
    collapsed={false}
    onCollapse={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Menu
          className=""
          defaultSelectedKeys={
            Array [
              "1",
            ]
          }
          focusable={false}
          mode="inline"
          prefixCls="ant-menu"
          theme="dark"
        >
          <MenuItem>
            <Icon
              type="dashboard"
            />
            <span>
              Dashboard
            </span>
          </MenuItem>
        </Menu>,
        Array [],
      ],
      "collapsed": false,
      "collapsedWidth": 80,
      "collapsible": true,
      "defaultCollapsed": false,
      "onCollapse": [MockFunction],
      "prefixCls": "ant-layout-sider",
      "reverseArrow": false,
      "style": Object {},
      "theme": "dark",
      "width": 200,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <MenuItem>
            <Icon
              type="dashboard"
            />
            <span>
              Dashboard
            </span>
          </MenuItem>,
          "className": "",
          "defaultSelectedKeys": Array [
            "1",
          ],
          "focusable": false,
          "mode": "inline",
          "prefixCls": "ant-menu",
          "theme": "dark",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Icon
                type="dashboard"
              />,
              <span>
                Dashboard
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "type": "dashboard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Dashboard",
              },
              "ref": null,
              "rendered": "Dashboard",
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Menu
            className=""
            defaultSelectedKeys={
              Array [
                "1",
              ]
            }
            focusable={false}
            mode="inline"
            prefixCls="ant-menu"
            theme="dark"
          >
            <MenuItem>
              <Icon
                type="dashboard"
              />
              <span>
                Dashboard
              </span>
            </MenuItem>
          </Menu>,
          Array [],
        ],
        "collapsed": false,
        "collapsedWidth": 80,
        "collapsible": true,
        "defaultCollapsed": false,
        "onCollapse": [MockFunction],
        "prefixCls": "ant-layout-sider",
        "reverseArrow": false,
        "style": Object {},
        "theme": "dark",
        "width": 200,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <MenuItem>
              <Icon
                type="dashboard"
              />
              <span>
                Dashboard
              </span>
            </MenuItem>,
            "className": "",
            "defaultSelectedKeys": Array [
              "1",
            ],
            "focusable": false,
            "mode": "inline",
            "prefixCls": "ant-menu",
            "theme": "dark",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Icon
                  type="dashboard"
                />,
                <span>
                  Dashboard
                </span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "type": "dashboard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Dashboard",
                },
                "ref": null,
                "rendered": "Dashboard",
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<AppSidebar /> component should render without children 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppSidebar
    collapsed={false}
    onCollapse={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Menu
          className=""
          defaultSelectedKeys={
            Array [
              "1",
            ]
          }
          focusable={false}
          mode="inline"
          prefixCls="ant-menu"
          theme="dark"
        >
          <MenuItem>
            <Icon
              type="dashboard"
            />
            <span>
              Dashboard
            </span>
          </MenuItem>
        </Menu>,
        Array [],
      ],
      "collapsed": false,
      "collapsedWidth": 80,
      "collapsible": true,
      "defaultCollapsed": false,
      "onCollapse": [Function],
      "prefixCls": "ant-layout-sider",
      "reverseArrow": false,
      "style": Object {},
      "theme": "dark",
      "width": 200,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <MenuItem>
            <Icon
              type="dashboard"
            />
            <span>
              Dashboard
            </span>
          </MenuItem>,
          "className": "",
          "defaultSelectedKeys": Array [
            "1",
          ],
          "focusable": false,
          "mode": "inline",
          "prefixCls": "ant-menu",
          "theme": "dark",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Icon
                type="dashboard"
              />,
              <span>
                Dashboard
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "type": "dashboard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Dashboard",
              },
              "ref": null,
              "rendered": "Dashboard",
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Menu
            className=""
            defaultSelectedKeys={
              Array [
                "1",
              ]
            }
            focusable={false}
            mode="inline"
            prefixCls="ant-menu"
            theme="dark"
          >
            <MenuItem>
              <Icon
                type="dashboard"
              />
              <span>
                Dashboard
              </span>
            </MenuItem>
          </Menu>,
          Array [],
        ],
        "collapsed": false,
        "collapsedWidth": 80,
        "collapsible": true,
        "defaultCollapsed": false,
        "onCollapse": [Function],
        "prefixCls": "ant-layout-sider",
        "reverseArrow": false,
        "style": Object {},
        "theme": "dark",
        "width": 200,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <MenuItem>
              <Icon
                type="dashboard"
              />
              <span>
                Dashboard
              </span>
            </MenuItem>,
            "className": "",
            "defaultSelectedKeys": Array [
              "1",
            ],
            "focusable": false,
            "mode": "inline",
            "prefixCls": "ant-menu",
            "theme": "dark",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Icon
                  type="dashboard"
                />,
                <span>
                  Dashboard
                </span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "type": "dashboard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Dashboard",
                },
                "ref": null,
                "rendered": "Dashboard",
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
